{
    "AWSTemplateFormatVersion":"2010-09-09",
    "Description":"IPQuery Service",
    "Parameters":{
        "SSHKeyName":{
            "Description":"SSH Key Name",
            "Type":"String"
        },
        "InstanceProfile":{
            "Description":"Name of the Instance Profile granting the IAM Role based permissions needed for IP Query",
            "Type":"String",
            "Default":"OpSecTrustedAuditorInstanceProfile"
        },
        "Environment":{
            "Description":"The environment in which you are deploying IP Query",
            "Type":"String",
            "Default":"production"
        }
    },
    "Mappings":{
        "RegionMap":{
            "us-west-2":{
                "CentOS7x8664withUpdatesHVM":"ami-c7d092f7"
            },
            "us-east-1":{
                "CentOS7x8664withUpdatesHVM":"ami-96a818fe"
            }
        }
    },
    "Resources":{
        "IPQuerySecurityGroup":{
            "Type":"AWS::EC2::SecurityGroup",
            "Properties":{
                "GroupDescription":"IPQuery Server Security Group",
                "SecurityGroupIngress":[
                    {
                        "FromPort":"443",
                        "IpProtocol":"tcp",
                        "CidrIp":"0.0.0.0/0",
                        "ToPort":"443"
                    },
                    {
                        "FromPort":"22",
                        "IpProtocol":"tcp",
                        "CidrIp":"0.0.0.0/0",
                        "ToPort":"22"
                    }
                ],
                "Tags":[
                    {
                        "Key":"App",
                        "Value":"ipquery"
                    },
                    {
                        "Key":"Type",
                        "Value":"app_server"
                    },
                    {
                        "Key":"Stack",
                        "Value":{
                            "Ref":"AWS::StackName"
                        }
                    },
                    {
                        "Key":"Name",
                        "Value":"ipquery"
                    }
                ]
            }
        },
        "IPQueryInstance":{
            "Type":"AWS::EC2::Instance",
            "Metadata":{
                "Comment": "The cloud-config script is delivered directly in user_data because the CentOS base AMIs run cloud-init automatically, looking for a cloud-init config in user_data"  
            },
            "Properties":{
                "IamInstanceProfile":{
                    "Ref":"InstanceProfile"
                },
                "ImageId":{
                    "Fn::FindInMap":[
                        "RegionMap",
                        {
                            "Ref":"AWS::Region"
                        },
                        "CentOS7x8664withUpdatesHVM"
                    ]
                },
                "InstanceType":"t2.micro",
                "KeyName":{
                    "Ref":"SSHKeyName"
                },
                "SecurityGroups":[
                    {
                        "Ref":"IPQuerySecurityGroup"
                    }
                ],
                "Tags":[
                    {
                        "Key":"App",
                        "Value":"ipquery"
                    },
                    {
                        "Key":"Type",
                        "Value":"app_server"
                    },
                    {
                        "Key":"Stack",
                        "Value":{
                            "Ref":"AWS::StackName"
                        }
                    },
                    {
                        "Key":"Name",
                        "Value":"ipquery"
                    }
                ],
                "UserData":{
                    "Fn::Base64":{
                        "Fn::Join":[
                            "",
                            [
                                "#cloud-config\n",
                                "\n",
                                "write_files:\n",
                                "-   content: |\n",
                                "        context:\n",
                                "        - application=ipquery\n",
                                "        - environment=", {"Ref":"Environment"}, "\n",
                                "    path: /etc/puppet-credstash.yaml\n",
                                "runcmd:\n",
                                " - rpm -ivh http://yum.puppetlabs.com/puppetlabs-release-el-7.noarch.rpm\n",
                                " - yum install -y puppet rubygems git\n",
                                " - gem install librarian-puppet\n",
                                " - mkdir -v -p /opt/puppet/hiera\n",
                                " - git clone https://github.com/gene1wood/ipquery.git /opt/puppet/ipquery-repo\n",
                                " - ln -v -s -f /opt/puppet/ipquery-repo/operations/ipquery/puppet/Puppetfile /opt/puppet/Puppetfile\n",
                                " - ln -v -s -f /opt/puppet/ipquery-repo/operations/ipquery/puppet/hiera.yaml /opt/puppet/hiera.yaml\n",
                                " - ln -v -s -f /opt/puppet/ipquery-repo/operations/ipquery/puppet/hiera/common.yaml /opt/puppet/hiera/common.yaml\n",
                                " - ln -v -s -f /opt/puppet/ipquery-repo/operations/ipquery/puppet/hiera/",
                                    {"Ref":"Environment"},
                                    ".yaml /opt/puppet/hiera/",
                                    {"Ref":"Environment"},
                                    ".yaml\n",
                                " - bash -c \"cd /opt/puppet && ",
                                    "HOME=/root librarian-puppet install\"\n",
                                " - puppet apply --modulepath /opt/puppet/modules --execute \"include 'credstash'\"\n",
                                " - puppet apply --modulepath /opt/puppet/modules --hiera_config /opt/puppet/hiera.yaml ",
                                    "--environment ",
                                    {"Ref":"Environment"}, " --execute \"include 'ipquery'\"\n"
                            ]
                        ]
                    }
                }
            }
        }
    }
}